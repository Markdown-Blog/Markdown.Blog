name: NuGet Package Publish

on:
  push:
    branches:
      - main
    paths:
      - 'src/Markdown.Blog/**'
  workflow_dispatch:

jobs:
  build-and-publish:
    # Add a condition to skip commits containing [skip ci]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src/Markdown.Blog

      - name: Update version and release notes
        run: |
          # Debug: Print the content we're searching
          echo "Current csproj content:"
          cat src/Markdown.Blog/Markdown.Blog.csproj
          
          # Get the current version parts
          echo "Extracting version string..."
          version_string=$(grep -oP '(?<=<Version>\$\(VersionPrefix\)\.)[0-9]+\.[0-9]+(?=</Version>)' src/Markdown.Blog/Markdown.Blog.csproj)
          echo "Extracted version string: $version_string"
          
          IFS='.' read -r major minor <<< "$version_string"
          echo "Major: $major, Minor: $minor"
          
          # Increment the minor version
          new_minor=$((minor + 1))
          echo "New minor version: $new_minor"
          
          # Update version
          sed -i "s/<Version>\$(VersionPrefix)\.$major\.$minor<\/Version>/<Version>\$(VersionPrefix).$major.$new_minor<\/Version>/" src/Markdown.Blog/Markdown.Blog.csproj
          
          # Verify the change
          echo "Updated csproj content:"
          cat src/Markdown.Blog/Markdown.Blog.csproj

          # Get the latest non-merge commit message
          commit_message=$(git log --no-merges -n 1 --pretty=format:"%s")
          if [ -z "$commit_message" ]; then
            commit_message="No significant changes in this release."
          fi

          # Update release notes, escaping special characters
          escaped_message=$(echo "$commit_message" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g')
          sed -i "s|<PackageReleaseNotes>.*</PackageReleaseNotes>|<PackageReleaseNotes>$escaped_message</PackageReleaseNotes>|" src/Markdown.Blog/Markdown.Blog.csproj

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/Markdown.Blog/Markdown.Blog.csproj
          git commit -m "Update version and release notes [skip ci]"
          git push

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: src/Markdown.Blog

      - name: Pack
        run: dotnet pack --configuration Release --no-build --output .
        working-directory: src/Markdown.Blog

      - name: Publish to NuGet
        run: |
          dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push *.snupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        working-directory: src/Markdown.Blog
